# simulate this filter
# <filter kubernetes.**>
#   type kubernetes_metadata
#   kubernetes_url "#{ENV['K8S_HOST_URL']}"
#   bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
#   ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#   include_namespace_id true
# </filter>
<filter kubernetes.**>
  type record_transformer
  enable_ruby
  auto_typecast true
  <record>
    kubernetes {"host":"localhost","namespace_name":"${/^k8s_([^\.]+)\.[^_]+_([^_]+)_([^_]+)_([^_]+)_[^_]+$/.match(record['CONTAINER_NAME'])[3]}","namespace_id":"namespaceid","pod_name":"${/^k8s_([^\.]+)\.[^_]+_([^_]+)_([^_]+)_([^_]+)_[^_]+$/.match(record['CONTAINER_NAME'])[2]}","pod_id":"${/^k8s_([^\.]+)\.[^_]+_([^_]+)_([^_]+)_([^_]+)_[^_]+$/.match(record['CONTAINER_NAME'])[4]}","container_name":"${/^k8s_([^\.]+)\.[^_]+_([^_]+)_([^_]+)_([^_]+)_[^_]+$/.match(record['CONTAINER_NAME'])[1]}","container_id":"${record['CONTAINER_ID_FULL']}","labels":"openshift_io:this is my label"}
  </record>
</filter>
